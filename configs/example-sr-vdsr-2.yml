name: example-sr-vdsr-2
cudnn:
    benchmark: false
    deterministic: true
datasets:
    superres:
        params:
            root: "@@@@@@@@@@ PATH_TO_IMAGE_FOLDER @@@@@@@@@@"
        transforms:
        -   operation: thelper.transforms.RandomCrop
            params:
                size: 64
            target_key:
            - original
        -   operation: thelper.transforms.CopyTo
            output_key:
            - copy
            params: {}
            target_key:
            - original
        -   operation: thelper.transforms.Resize
            params:
                dsize:
                - 32
                - 32
            target_key:
            - copy
        -   operation: thelper.transforms.Resize
            params:
                dsize:
                - 64
                - 64
            target_key:
            - copy
        type: thelper.data.ImageCopyDataset
loaders:
    base_transforms:
    -   operation: torchvision.transforms.ToTensor
        target_key:
        - original
        - copy
    drop_last: false
    numpy_seed: 0
    pin_memory: false
    random_seed: 0
    test_seed: 0
    test_shuffle: true
    test_split:
        superres: 0.1
    torch_seed: 0
    train_batch_size: 32
    train_scale: 2.0
    train_shuffle: true
    train_split:
        superres: 0.7
    valid_batch_size: 16
    valid_seed: 0
    valid_shuffle: true
    valid_split:
        superres: 0.2
    workers: 0
model:
    type: thelper.nn.sr.VDSR
overwrite: true
trainer:
    device: cuda:all
    display_train: true
    display_valid: true
    epochs: 150
    metrics:
        psnr:
            params:
                data_range: 1.0
            type: thelper.optim.PSNR
    monitor: psnr
    optimization:
        loss:
            params: {}
            type: torch.nn.MSELoss
        optimizer:
            params:
                lr: 0.001
            type: torch.optim.Adam
        scheduler:
            params:
                factor: 0.1
                mode: max
                patience: 3
                threshold: 0.0001
                threshold_mode: rel
                verbose: true
            step_metric: psnr
            type: torch.optim.lr_scheduler.ReduceLROnPlateau
    save_freq: 1
    use_tbx: true
